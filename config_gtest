版本：
gtest v1.7
<1053 linux6 [ywx] :/onip/ywx/gtest/googletest-master/googletest/usr/memcpy_s>cat /etc/SuSE-release 
SUSE Linux Enterprise Server 11 (x86_64)
VERSION = 11
PATCHLEVEL = 1

gtest环境配置：

一、总体环境

1、HOME目录下.bashrc添加
source ~/gtest/googletest-master/config/env.sh

source ~/gtest/googletest-master/config/env.csh
2、包直接解压为
$HOME/gtest

二、安装环境图示
<1038 linux6 [ywx] :/onip/ywx/gtest/googletest-master>ls
CMakeLists.txt  README.md  appveyor.yml  config  googlemock  googletest  travis.sh

三、环境配置文件
1、csh
/onip/ywx/gtest/googletest-master/config/env.csh

#!/usr/bin/csh

setenv GTEST_DIR ${HOME}/gtest/googletest-master/googletest

alias gtest "cd ${GTEST_DIR}"
alias gtcfg "cd ${GTEST_DIR}/../config"
~

2、bash
/onip/ywx/gtest/googletest-master/config/env.sh
#!/bin/sh

export GTEST_DIR=${HOME}/gtest/googletest-master/googletest

alias gtest="cd ${GTEST_DIR}"
alias gtcfg="cd ${GTEST_DIR}/../config"

四、Makefile文件
在googletest目录创建自己的usr目录存放自己的文件
<1055 linux6 [ywx] :/onip/ywx/gtest/googletest-master/googletest/usr>ls
common  hamming_distance  memcpy_s  memcpy_s_back

makefile目录
<1060 linux6 [ywx] :/onip/ywx/gtest/googletest-master/googletest/make>ls
Makefile      gtest_main.o               hamming_distance_unittest.o  memcpy_s_unittest.o  sample1_unittest.o
gtest-all.o   hamming_distance.o         memcpy_s.o                   sample1.o
gtest_main.a  hamming_distance_unittest  memcpy_s_unittest            sample1_unittest

Makefile文件内容
# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
        $(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
        $(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
        $(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
        $(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

sample1.o : $(USER_DIR)/sample1.cc $(USER_DIR)/sample1.h $(GTEST_HEADERS)
        $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/sample1.cc

sample1_unittest.o : $(USER_DIR)/sample1_unittest.cc \
                     $(USER_DIR)/sample1.h $(GTEST_HEADERS)
        $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/sample1_unittest.cc

sample1_unittest : sample1.o sample1_unittest.o gtest_main.a
        $(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

memcpy_s.o : $(MEM_DIR)/memcpy_s.cc $(MEM_DIR)/memcpy_s.h $(GTEST_HEADERS)
        $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(MEM_DIR)/memcpy_s.cc

memcpy_s_unittest.o : $(MEM_DIR)/memcpy_s_unittest.cc \
                     $(MEM_DIR)/memcpy_s.h $(GTEST_HEADERS)
        $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(MEM_DIR)/memcpy_s_unittest.cc

memcpy_s_unittest : memcpy_s.o memcpy_s_unittest.o gtest_main.a
        $(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@   

hamming_distance.o : $(HAM_DIS_DIR)/hamming_distance.cc $(HAM_DIS_DIR)/hamming_distance.h $(GTEST_HEADERS)
        $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(HAM_DIS_DIR)/hamming_distance.cc

hamming_distance_unittest.o : $(HAM_DIS_DIR)/hamming_distance_unittest.cc \
                     $(HAM_DIS_DIR)/hamming_distance.h $(GTEST_HEADERS)
        $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(HAM_DIS_DIR)/hamming_distance_unittest.cc

hamming_distance_unittest : hamming_distance.o hamming_distance_unittest.o gtest_main.a
        $(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@     
